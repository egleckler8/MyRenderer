#version 330 core

in vec3 Normal;
in vec3 FragPos;

out vec4 FragColor;

uniform vec3 objectColor;
uniform vec3 lightColor;
uniform vec3 lightPos;


void main()
{

    // Ambient lighting
    float ambientIntensity = 0.1;
    vec3 ambientLight = ambientIntensity * lightColor;

    // Diffuse lighting
    vec3 norm = normalize(Normal);
    vec3 lightDirection = normalize(lightPos - FragPos);
    float diffusion = max(dot(norm, lightDirection), 0.0);
    vec3 diffuseLight = diffusion * lightColor;

    // Adding it all up and output
    vec3 result = (ambientLight + diffuseLight) * objectColor;
    FragColor = vec4(result, 1.0f);

}